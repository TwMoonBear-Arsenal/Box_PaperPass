# 此 GitHub Workflow 的功能是將指定文件複製到名為 [package] 的文件夾中，並將其打包成 ZIP 文件，以供後續工作流程使用。使用說明：
# 1. 將此文件保存為 .github/workflows/2.ModuleTest.yml。
# 2. 當推送到 main 分支時，此工作流程將自動執行。

name: 2.ModuleTest

on:
  workflow_run:
    workflows: ["1.ModulePackage"]
    types: [completed]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # 檢查上一個工作流程的狀態
      - name: Check previous workflow status
        id: check_status
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "failure" ]; then
            echo "Previous workflow failed. Exiting."
            exit 1
          else
            echo "Previous workflow succeeded. Continuing."
          fi

      # 檢出代碼
      - name: 檢出代碼
        uses: actions/checkout@v2

      # 下載上一個工作流程的產物
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "package"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/package.zip`, Buffer.from(download.data));

      # 解壓縮產物
      - name: 'Unzip artifact'
        run: |  
          ls -al
          mkdir package
          mv package.zip ./package
          unzip package/package.zip -d package
          ls -al package

      # 構建及執行 Docker 容器
      - name: Build and run Docker container
        run: |
          docker build -t myapp ./package
          docker run -d --name myapp-container -p 2222:22 myapp

      # 安裝測試環境 
      - name: Install test environment
        run: |
          sudo apt update
          sudo apt install python3
          sudo apt install python3-pip
          pip3 install pytest
          pip3 install paramiko
          pytest --version

      # 執行測試
      - name: 執行容器外測試
        run: |  
          pwd
          ls -al
          pytest ./source/Scr_SimpleDemoBox_Test/Scr_SimpleBox_Test.py

      # 測試通過，將原zip原封不動上傳
      - name: 上傳打包文件
        uses: actions/upload-artifact@v4
        with:
          name: package 
          path: package/package.zip