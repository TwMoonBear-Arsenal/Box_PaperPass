# 這是一個GitHub Action工作流程檔案，當[2.ModuleTest]工作流程完成後會被觸發。
# 如果[2.ModuleTest]工作流程失敗，這個工作流程會顯示錯誤訊息並以失敗結束。
# 如果[2.ModuleTest]工作流程成功，則會繼續執行下面的工作，包括取得前一工作流程上傳的成品(artifact)並創建一個發布(release)。

name: 3.ModuleRelease

# 觸發條件設定為workflow_run，指定在[2.ModuleTest]工作流程完成後執行
on:
  workflow_run:
    workflows: ["2.ModuleTest"]
    types:
      - completed

jobs:
  check_previous_workflow:
    runs-on: ubuntu-latest
    steps:
      # 檢查上一個工作流程的狀態
      - name: Check previous workflow status
        id: check_status
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "failure" ]; then
            echo "Previous workflow failed. Exiting."
            exit 1
          else
            echo "Previous workflow succeeded. Continuing."
          fi

  release:
    needs: check_previous_workflow
    runs-on: ubuntu-latest
    steps:
      # 下載上一個工作流程的產物至package文件夾以免混亂
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "package"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/package.zip`, Buffer.from(download.data));

      # 創建發布(release)
      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          name: $(date +'%Y-%m-%d')
          files: release.zip